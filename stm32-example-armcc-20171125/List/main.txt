; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: armcc [4d3621]
; commandline armcc [--list --debug -c --asm --interleave --output_dir=Obj --asm_dir=List --depend_dir=Obj --list_dir=List --md --cpu=Cortex-M3 --apcs=interwork -O0 -ISource/FWLib/inc -ISource -DSTM32F10X_HD Source/main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Delay PROC
;;;210    *******************************************************************************/
;;;211    void Delay(vu32 nCount)
000000  b501              PUSH     {r0,lr}
;;;212    {
;;;213      for(; nCount != 0; nCount--);
000002  e002              B        |L1.10|
                  |L1.4|
000004  9800              LDR      r0,[sp,#0]
000006  1e40              SUBS     r0,r0,#1
000008  9000              STR      r0,[sp,#0]
                  |L1.10|
00000a  9800              LDR      r0,[sp,#0]
00000c  2800              CMP      r0,#0
00000e  d1f9              BNE      |L1.4|
;;;214    }
000010  bd08              POP      {r3,pc}
;;;215    
                          ENDP

                  NVIC_Configuration PROC
;;;192    *******************************************************************************/
;;;193    void NVIC_Configuration(void)
000012  b510              PUSH     {r4,lr}
;;;194    {
;;;195    #ifdef  VECT_TAB_RAM  
;;;196      /* Set the Vector Table base location at 0x20000000 */ 
;;;197      NVIC_SetVectorTable(NVIC_VectTab_RAM, 0x0); 
;;;198    #else  /* VECT_TAB_FLASH  */
;;;199      /* Set the Vector Table base location at 0x08000000 */ 
;;;200      NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x0);   
000014  2100              MOVS     r1,#0
000016  f04f6000          MOV      r0,#0x8000000
00001a  f7fffffe          BL       NVIC_SetVectorTable
;;;201    #endif
;;;202    }
00001e  bd10              POP      {r4,pc}
;;;203    
                          ENDP

                  RCC_Configuration PROC
;;;135    *******************************************************************************/
;;;136    void RCC_Configuration(void)
000020  b510              PUSH     {r4,lr}
;;;137    {   
;;;138      /* RCC system reset(for debug purpose) */
;;;139      RCC_DeInit();
000022  f7fffffe          BL       RCC_DeInit
;;;140    
;;;141      /* Enable HSE */
;;;142      /*启用外部时钟8m晶体*/
;;;143      RCC_HSEConfig(RCC_HSE_ON);
000026  f44f3080          MOV      r0,#0x10000
00002a  f7fffffe          BL       RCC_HSEConfig
;;;144    
;;;145      /* Wait till HSE is ready */
;;;146      HSEStartUpStatus = RCC_WaitForHSEStartUp();
00002e  f7fffffe          BL       RCC_WaitForHSEStartUp
000032  4958              LDR      r1,|L1.404|
000034  7008              STRB     r0,[r1,#0]
;;;147    
;;;148      if(HSEStartUpStatus == SUCCESS)
000036  4608              MOV      r0,r1
000038  7800              LDRB     r0,[r0,#0]  ; HSEStartUpStatus
00003a  2801              CMP      r0,#1
00003c  d126              BNE      |L1.140|
;;;149      {
;;;150        /* Enable Prefetch Buffer */
;;;151        FLASH_PrefetchBufferCmd(FLASH_PrefetchBuffer_Enable);
00003e  2010              MOVS     r0,#0x10
000040  f7fffffe          BL       FLASH_PrefetchBufferCmd
;;;152    
;;;153        /* Flash 2 wait state */
;;;154        FLASH_SetLatency(FLASH_Latency_2);
000044  2002              MOVS     r0,#2
000046  f7fffffe          BL       FLASH_SetLatency
;;;155     	
;;;156        /* HCLK = SYSCLK */
;;;157        RCC_HCLKConfig(RCC_SYSCLK_Div1); 
00004a  2000              MOVS     r0,#0
00004c  f7fffffe          BL       RCC_HCLKConfig
;;;158      
;;;159        /* PCLK2 = HCLK */
;;;160        RCC_PCLK2Config(RCC_HCLK_Div1); 
000050  2000              MOVS     r0,#0
000052  f7fffffe          BL       RCC_PCLK2Config
;;;161    
;;;162        /* PCLK1 = HCLK/2 */
;;;163        RCC_PCLK1Config(RCC_HCLK_Div2);
000056  f44f6080          MOV      r0,#0x400
00005a  f7fffffe          BL       RCC_PCLK1Config
;;;164    
;;;165        /* PLLCLK = 8MHz * 9 = 72 MHz */
;;;166        RCC_PLLConfig(RCC_PLLSource_HSE_Div1, RCC_PLLMul_9);
00005e  f44f11e0          MOV      r1,#0x1c0000
000062  f44f3080          MOV      r0,#0x10000
000066  f7fffffe          BL       RCC_PLLConfig
;;;167    
;;;168        /* Enable PLL */ 
;;;169        RCC_PLLCmd(ENABLE);
00006a  2001              MOVS     r0,#1
00006c  f7fffffe          BL       RCC_PLLCmd
;;;170    
;;;171        /* Wait till PLL is ready */
;;;172        while(RCC_GetFlagStatus(RCC_FLAG_PLLRDY) == RESET)
000070  bf00              NOP      
                  |L1.114|
000072  2039              MOVS     r0,#0x39
000074  f7fffffe          BL       RCC_GetFlagStatus
000078  2800              CMP      r0,#0
00007a  d0fa              BEQ      |L1.114|
;;;173        {
;;;174        }
;;;175    
;;;176        /* Select PLL as system clock source */
;;;177        RCC_SYSCLKConfig(RCC_SYSCLKSource_PLLCLK);
00007c  2002              MOVS     r0,#2
00007e  f7fffffe          BL       RCC_SYSCLKConfig
;;;178    
;;;179        /* Wait till PLL is used as system clock source */
;;;180        while(RCC_GetSYSCLKSource() != 0x08)
000082  bf00              NOP      
                  |L1.132|
000084  f7fffffe          BL       RCC_GetSYSCLKSource
000088  2808              CMP      r0,#8
00008a  d1fb              BNE      |L1.132|
                  |L1.140|
;;;181        {
;;;182        }
;;;183      }
;;;184    }
00008c  bd10              POP      {r4,pc}
;;;185    
                          ENDP

                  main PROC
;;;41     *******************************************************************************/
;;;42     int main(void)
00008e  f7fffffe          BL       RCC_Configuration
;;;43     {
;;;44     #ifdef DEBUG
;;;45       debug();
;;;46     #endif
;;;47     
;;;48     
;;;49     
;;;50       /* System Clocks Configuration **********************************************/
;;;51       /*系统时钟选择 72M pll时钟作为时钟源*/
;;;52       RCC_Configuration();   
;;;53     
;;;54       /* NVIC Configuration *******************************************************/
;;;55       NVIC_Configuration();
000092  f7fffffe          BL       NVIC_Configuration
;;;56     
;;;57       /* Configure all unused GPIO port pins in Analog Input mode (floating input
;;;58          trigger OFF), this will reduce the power consumption and increase the device
;;;59          immunity against EMI/EMC *************************************************/
;;;60       RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB |
000096  2101              MOVS     r1,#1
000098  207c              MOVS     r0,#0x7c
00009a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;61                              RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD |
;;;62                              RCC_APB2Periph_GPIOE, ENABLE);
;;;63     
;;;64       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_All;
00009e  f64f70ff          MOV      r0,#0xffff
0000a2  493d              LDR      r1,|L1.408|
0000a4  8008              STRH     r0,[r1,#0]
;;;65       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
0000a6  2000              MOVS     r0,#0
0000a8  70c8              STRB     r0,[r1,#3]
;;;66       GPIO_Init(GPIOA, &GPIO_InitStructure);
0000aa  483c              LDR      r0,|L1.412|
0000ac  f7fffffe          BL       GPIO_Init
;;;67       GPIO_Init(GPIOB, &GPIO_InitStructure);
0000b0  4939              LDR      r1,|L1.408|
0000b2  483b              LDR      r0,|L1.416|
0000b4  f7fffffe          BL       GPIO_Init
;;;68       GPIO_Init(GPIOC, &GPIO_InitStructure);
0000b8  4937              LDR      r1,|L1.408|
0000ba  483a              LDR      r0,|L1.420|
0000bc  f7fffffe          BL       GPIO_Init
;;;69       GPIO_Init(GPIOD, &GPIO_InitStructure);
0000c0  4935              LDR      r1,|L1.408|
0000c2  4839              LDR      r0,|L1.424|
0000c4  f7fffffe          BL       GPIO_Init
;;;70       GPIO_Init(GPIOE, &GPIO_InitStructure);
0000c8  4933              LDR      r1,|L1.408|
0000ca  4838              LDR      r0,|L1.428|
0000cc  f7fffffe          BL       GPIO_Init
;;;71     
;;;72       RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB |
0000d0  2100              MOVS     r1,#0
0000d2  207c              MOVS     r0,#0x7c
0000d4  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;73                              RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD |
;;;74                              RCC_APB2Periph_GPIOE, DISABLE);  
;;;75     #ifdef USE_STM3210E_EVAL
;;;76       RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF | RCC_APB2Periph_GPIOG, ENABLE);
0000d8  2101              MOVS     r1,#1
0000da  f44f70c0          MOV      r0,#0x180
0000de  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;77     
;;;78       GPIO_Init(GPIOF, &GPIO_InitStructure);
0000e2  492d              LDR      r1,|L1.408|
0000e4  4832              LDR      r0,|L1.432|
0000e6  f7fffffe          BL       GPIO_Init
;;;79       GPIO_Init(GPIOG, &GPIO_InitStructure);
0000ea  492b              LDR      r1,|L1.408|
0000ec  4831              LDR      r0,|L1.436|
0000ee  f7fffffe          BL       GPIO_Init
;;;80       RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF | RCC_APB2Periph_GPIOG, DISABLE);
0000f2  2100              MOVS     r1,#0
0000f4  f44f70c0          MOV      r0,#0x180
0000f8  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;81     #endif /* USE_STM3210E_EVAL */
;;;82     
;;;83       /* Configure IO connected to LD1, LD2, LD3 and LD4 leds *********************/
;;;84       /* Enable GPIO_LED clock */
;;;85       RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIO_LED, ENABLE);
0000fc  2101              MOVS     r1,#1
0000fe  2080              MOVS     r0,#0x80
000100  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;86     
;;;87       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10;
000104  f44f60f8          MOV      r0,#0x7c0
000108  4923              LDR      r1,|L1.408|
00010a  8008              STRH     r0,[r1,#0]
;;;88       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00010c  2010              MOVS     r0,#0x10
00010e  70c8              STRB     r0,[r1,#3]
;;;89       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000110  2003              MOVS     r0,#3
000112  7088              STRB     r0,[r1,#2]
;;;90       GPIO_Init(GPIO_LED, &GPIO_InitStructure);
000114  4826              LDR      r0,|L1.432|
000116  f7fffffe          BL       GPIO_Init
;;;91     
;;;92       while (1)
00011a  e039              B        |L1.400|
                  |L1.284|
;;;93       {	
;;;94         /* Turn on LD1 */
;;;95         GPIO_SetBits(GPIO_LED, GPIO_Pin_6);
00011c  2140              MOVS     r1,#0x40
00011e  4824              LDR      r0,|L1.432|
000120  f7fffffe          BL       GPIO_SetBits
;;;96         /* Insert delay */
;;;97         Delay(0xAFFFF);
000124  4824              LDR      r0,|L1.440|
000126  f7fffffe          BL       Delay
;;;98     
;;;99     
;;;100        /* Turn on LD2 and LD3 */
;;;101        GPIO_SetBits(GPIO_LED, GPIO_Pin_7 | GPIO_Pin_8);
00012a  f44f71c0          MOV      r1,#0x180
00012e  4820              LDR      r0,|L1.432|
000130  f7fffffe          BL       GPIO_SetBits
;;;102        /* Turn off LD1 */
;;;103        GPIO_ResetBits(GPIO_LED, GPIO_Pin_6);
000134  2140              MOVS     r1,#0x40
000136  481e              LDR      r0,|L1.432|
000138  f7fffffe          BL       GPIO_ResetBits
;;;104        /* Insert delay */
;;;105        Delay(0xAFFFF);
00013c  481e              LDR      r0,|L1.440|
00013e  f7fffffe          BL       Delay
;;;106    
;;;107        /* Turn on LD4 */
;;;108        GPIO_SetBits(GPIO_LED, GPIO_Pin_9);
000142  f44f7100          MOV      r1,#0x200
000146  481a              LDR      r0,|L1.432|
000148  f7fffffe          BL       GPIO_SetBits
;;;109        /* Turn off LD2 and LD3 */
;;;110        GPIO_ResetBits(GPIO_LED, GPIO_Pin_8 | GPIO_Pin_7);
00014c  f44f71c0          MOV      r1,#0x180
000150  4817              LDR      r0,|L1.432|
000152  f7fffffe          BL       GPIO_ResetBits
;;;111        /* Insert delay */
;;;112        Delay(0xAFFFF);
000156  4818              LDR      r0,|L1.440|
000158  f7fffffe          BL       Delay
;;;113    
;;;114        /* Turn off LD4 */
;;;115        GPIO_ResetBits(GPIO_LED, GPIO_Pin_9);
00015c  f44f7100          MOV      r1,#0x200
000160  4813              LDR      r0,|L1.432|
000162  f7fffffe          BL       GPIO_ResetBits
;;;116    
;;;117    	if(++count>3)
000166  4815              LDR      r0,|L1.444|
000168  7800              LDRB     r0,[r0,#0]  ; count
00016a  1c40              ADDS     r0,r0,#1
00016c  b2c0              UXTB     r0,r0
00016e  4913              LDR      r1,|L1.444|
000170  7008              STRB     r0,[r1,#0]
000172  2803              CMP      r0,#3
000174  dd07              BLE      |L1.390|
;;;118    	{
;;;119    		count = 0;
000176  2000              MOVS     r0,#0
000178  7008              STRB     r0,[r1,#0]
;;;120    		GPIO_ResetBits(GPIO_LED, GPIO_Pin_10);
00017a  f44f6180          MOV      r1,#0x400
00017e  480c              LDR      r0,|L1.432|
000180  f7fffffe          BL       GPIO_ResetBits
000184  e004              B        |L1.400|
                  |L1.390|
;;;121    	}
;;;122    	else
;;;123    	{
;;;124    		GPIO_SetBits(GPIO_LED, GPIO_Pin_10);
000186  f44f6180          MOV      r1,#0x400
00018a  4809              LDR      r0,|L1.432|
00018c  f7fffffe          BL       GPIO_SetBits
                  |L1.400|
000190  e7c4              B        |L1.284|
;;;125    	}
;;;126      }
;;;127    }
;;;128    
                          ENDP

000192  0000              DCW      0x0000
                  |L1.404|
                          DCD      HSEStartUpStatus
                  |L1.408|
                          DCD      GPIO_InitStructure
                  |L1.412|
                          DCD      0x40010800
                  |L1.416|
                          DCD      0x40010c00
                  |L1.420|
                          DCD      0x40011000
                  |L1.424|
                          DCD      0x40011400
                  |L1.428|
                          DCD      0x40011800
                  |L1.432|
                          DCD      0x40011c00
                  |L1.436|
                          DCD      0x40012000
                  |L1.440|
                          DCD      0x000affff
                  |L1.444|
                          DCD      count

                          AREA ||.data||, DATA, ALIGN=1

                  GPIO_InitStructure
                          DCDU     0x00000000
                  HSEStartUpStatus
000004  00                DCB      0x00
                  count
000005  00                DCB      0x00

                  __ARM_use_no_argv EQU 0
